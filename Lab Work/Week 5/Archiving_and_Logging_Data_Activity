Archiving and Logging Data
Please edit this file by adding the solution commands on the line below the prompt.
Save and submit the completed file for your homework submission.

Step 1: Create, Extract, Compress, and Manage tar Backup Archives
Command to extract the TarDocs.tar archive to the current directory: tar -xvf TarDocs.tar


Command to create the Javaless_Doc.tar archive from the TarDocs/ directory, while excluding the TarDocs/Documents/Java directory: tar --exclude='Documents/Java' -cvf Javaless_Docs.tar ./TarDocs


Command to ensure Java/ is not in the new Javaless_Docs.tar archive: tar -tvf Javaless_Docs.tar | grep Java


Bonus
Command to create an incremental archive called logs_backup_tar.gz with only changed files to snapshot.file for the /var/log directory:
Critical Analysis Question
Why wouldn't you use the options -x and -c at the same with tar?: Because they contradict themselves with -x extracting a tar file and -c creating a tar file. 

Step 2: Create, Manage, and Automate Cron Jobs
Cron job for backing up the /var/log/auth.log file: 0 6 * * 3 tar -cvf /auth_backup.tgz /var/log/auth.log



Step 3: Write Basic Bash Scripts
Brace expansion command to create the four subdirectories: mkdir -p ~/backups/{freemem,diskuse,openlist,freedisk}


Paste your system.sh script edits below:

 #!/bin/bash
free -h > ~/backups/freemem/free_mem.txt 
du -h > ~/backups/diskuse/disk_usage.txt
lsof > ~/backups/openlist/open_list.txt
df -h > ~/backups/freedisk/free_disk.txt 

Command to make the system.sh script executable: chmod +x system.sh


Optional
Commands to test the script and confirm its execution: 
sudo ./system.sh
cat backups/freedisk/free_disk.txt
cat backups/openlist/open_list.txt
cat backups/diskuse/disk_usage.txt
cat backups/freemem/free_mem.txt
Bonus
Command to copy system to system-wide cron directory: sudo cp system.sh /etc/cron.weekly



Step 4. Manage Log File Sizes
Run sudo nano /etc/logrotate.conf to edit the logrotate configuration file.

 Configure a log rotation scheme that backs up authentication messages to the /var/log/auth.log.


Add your config file edits below:
/var/log/auth.log {
    weekly
    rotate 7
    delaycompress
    notifempty
    missingok
}


                   





Bonus: Check for Policy and File Violations
Command to verify auditd is active: systemctl status auditd


Command to set number of retained logs and maximum log file size:


Add the edits made to the configuration file below:
#
# This file controls the configuration of the audit daemon
#

local_events = yes
write_logs = yes
log_file = /var/log/audit/audit.log
log_group = adm
log_format = RAW
flush = INCREMENTAL_ASYNC
freq = 50
max_log_file = 35
num_logs = 7

Command using auditd to set rules for /etc/shadow, /etc/passwd and /var/log/auth.log:


Add the edits made to the rules file below:


-w /etc/shadow -p wra -k hashpass_audit
-w /etc/passwd -p wra -k userpass_audit
-w /var/log/auth.log -p wra -k authlog_audit 



Command to restart auditd: sudo systemctl restart auditd


Command to list all auditd rules: sudo auditctl -l


Command to produce an audit report: aureport -au


Create a user with sudo useradd attacker and produce an audit report that lists account modifications: sudo aureport -m


Command to use auditd to watch /var/log/cron: sudo auditctl â€“w /var/log/cron -p


Command to verify auditd rules: sudo auditctl -s 
